{
  "name": "Dynamic Controller Test 5",
  "type": "Controller",
  "description": "Test 5 Dynamic Controller Creation via Blueprint",
  "configuration": [
    {
      "connection": {
        "host": "localhost",
        "port": 1883,
        "topic": "hardware/emulator/temperature",
        "auth": {
          "username": "Gary",
          "password": "Password1!"
        },
        "method": "ssh",
        "protocol": "MQTT",
        "baud_rate": 115200,
        "data_format": "8N1",
        "type": "usb_to_serial"
      },
      "peripherals": [
        {
          "type": "temperature_sensor",
          "name": "Temperature Sensor 1",
          "connection": {
            "port": "/dev/ttyS1",
            "protocol": "ascii"
          },
          "polling_frequency": 1,
          "read_command": "TEMP1?",
          "threshold": 75
        },
        {
          "type": "temperature_sensor",
          "name": "Temperature Sensor 2",
          "connection": {
            "port": "/dev/ttyS2",
            "protocol": "ascii"
          },
          "polling_frequency": 1,
          "read_command": "TEMP2?",
          "threshold": 75
        },
        {
          "type": "ph_sensor",
          "name": "pH Sensor",
          "connection": {
            "port": "/dev/ttyS3",
            "protocol": "ascii"
          },
          "polling_frequency": 5,
          "read_command": "PH?"
        },
        {
          "type": "alarm",
          "name": "Alarm",
          "trigger_condition": "temperature >= 75",
          "activation_command": "ALARM ON",
          "deactivation_command": "ALARM OFF",
          "connection": {
            "port": "/dev/ttyS3",
            "protocol": "ascii"
          }
        }
      ],
      "commands": [
        {
          "name": "START",
          "description": "Starts the Controller",
          "response": "Controller started"
        },
        {
          "name": "STOP",
          "description": "Stops the controller",
          "response": "Controller stopped"
        },
        {
          "name": "SET_FREQUENCY",
          "description": "Adjust the data generation frequency",
          "parameters": [
            {
              "name": "frequency",
              "type": "string",
              "allowed_values": [
                "1Hz",
                "2Hz",
                "5Hz"
              ]
            }
          ],
          "response": "Frequency updated"
        }
      ],
      "data_format": {
        "type": "JSON",
        "schema": {
          "timestamp": "ISO_8601",
          "temperature": "float"
        }
      },
      "default_state": {
        "status": "idle",
        "frequency": "1Hz",
        "last_generated_value": "test"
      }
    }
  ]
}
    
    